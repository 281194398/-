给你一个仅包含小写英文字母和 '?' 字符的字符串 s，请你将所有的 '?' 转换为若干小写字母，使最终的字符串不包含任何 连续重复 的字符。

注意：你 不能 修改非 '?' 字符。

题目测试用例保证 除 '?' 字符 之外，不存在连续重复的字符。

在完成所有转换（可能无需转换）后返回最终的字符串。如果有多个解决方案，请返回其中任何一个。可以证明，在给定的约束条件下，答案总是存在的。

 

示例 1：

输入：s = "?zs"
输出："azs"
解释：该示例共有 25 种解决方案，从 "azs" 到 "yzs" 都是符合题目要求的。只有 "z" 是无效的修改，因为字符串 "zzs" 中有连续重复的两个 'z' 。
示例 2：

输入：s = "ubv?w"
输出："ubvaw"
解释：该示例共有 24 种解决方案，只有替换成 "v" 和 "w" 不符合题目要求。因为 "ubvvw" 和 "ubvww" 都包含连续重复的字符。
示例 3：

输入：s = "j?qg??b"
输出："jaqgacb"
示例 4：

输入：s = "??yw?ipkj?"
输出："acywaipkja"


class Solution:
    def modifyString(self, s: str) -> str:
        l = list(' ' + s +' ')
        for i in range(1,len(l)):
            if l[i] == '?':
                for ch in 'abcdgfjl':
                    l[i] = ch
                    if l[i] != l[i-1] and l[i] != l[i+1]:
                        break
            
        return ''.join(l[1:-1])


class Solution:
    def modifyString(self, s: str) -> str:
        s1= 'abcdefghijklmnopqrstuvwxyz'
        res = list('0'+s+'0')
        i=1       
        while i<len(res)-1:
            if res[i]=='?':
                j=0
                while j<len(s1):
                    if s1[j] not in [res[i-1],res[i+1]]:
                        res[i]=s1[j]
                        break
                    j+=1
            i+=1
        return ''.join(res[1:-1])


class Solution:
    def modifyString(self, s: str) -> str:
        #生成小写字符串
        s1 = string.ascii_lowercase
        print(s1)

        #获取字符串长度
        s2 = list('0' + s + '0')
        L = len(s2)
        #print(s[L])
        i = 1
        while i < L-1:
            if s2[i] == "?":
                j = 0
                while j < len(s1):
                    if s1[j] not in [s2[i-1],s2[i+1]]:
                        s2[i] = s1[j]
                        break
                    j+=1
            i+=1
        return ''.join(s2[1:L-1])
                        


                    




